name: Deploy docker image

on:
  push:
    branches:
      - main
    paths:
      # - 'src/**' 
      - 'infrastructure/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'

      # Check for backend environment
      - name: Verify backend environment resources
        run: |
          aws s3api head-bucket --bucket terraform-state-bucket-myproject 2>/dev/null || \
          aws s3api create-bucket --bucket terraform-state-bucket-myproject --region ap-south-1 --create-bucket-configuration LocationConstraint=ap-south-1
          aws dynamodb describe-table --table-name terraform-locks 2>/dev/null || \
          aws dynamodb create-table --table-name terraform-locks --attribute-definitions AttributeName=Id,AttributeType=S --key-schema AttributeName=Id,KeyType=HASH --billing-mode PAY_PER_REQUEST --region ap-south-1
      
      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: infrastructure

      # Validate Terraform
      - name: Validate Terraform
        run: terraform validate
        working-directory: infrastructure

      # Apply Terraform
      - name: Apply Terraform
        run: terraform apply -auto-approve
        # run: terraform destroy -auto-approve
        working-directory: infrastructure

        